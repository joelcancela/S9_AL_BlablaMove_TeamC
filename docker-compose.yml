version: "2.1"

services:
  adminMarketingUI:
    container_name: al_adminMarketingUI
    image: "al/fe/admin_marketing_ui"
    ports:
      - "4201:4200"
    restart: always

  clientUI:
    container_name: al_clientUI
    image: "al/fe/client_ui"
    ports:
      - "4202:4200"
    restart: always

  dashboardService:
    container_name: al_dashboardService
    image: "al/ws/dashboardservice"
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      influxdb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    links:
      - kafka
      - influxdb

  user:
    container_name: al_user
    image: "al/fe/core/user"
    ports:
      - "5001:5000"
    depends_on:
      kafka:
        condition: service_healthy
    links:
      - kafka

  delivery:
    container_name: al_delivery
    image: "al/fe/core/delivery"
    ports:
      - "5002:5000"
    depends_on:
      kafka:
        condition: service_healthy
    links:
      - kafka

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka
    links:
      - zookeeper:zk
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_CREATE_TOPICS: "topic:1:1,user:1:1,delivery:1:1"
      KAFKA_ZOOKEEPER_CONNECT: "zk:2181"
    healthcheck:
        test: "kafka-topics.sh --zookeeper zk:2181 --list 2>&1 | grep \"delivery\""

  influxdb:
    image: influxdb
    healthcheck:
     test: "curl -f http://localhost:8086/ping"
     interval: 3s
     timeout: 10s
     retries: 5
    ports:
      - 8086:8086
# Add to containers talking to Kafka:
# links:
#     - kafka
#
# Test:
# docker-compose up
# docker exec -it <container_kafka_id> bash
# kafka-console-producer.sh --broker-list localhost:9092 --topic topic
# <Write some messages, then CTRL-C>
# kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic topic --from-beginning
# Your messages are being read WOW
